import type { Meta, StoryObj } from "@storybook/react";

import notFoundPoster from "~/assets/notfound.jpg";
import notFoundVideo from "~/assets/notfound.mp4";
import flatlinePoster from "~/assets/flatline.png";
import flatlineVideo from "~/assets/flatline.mp4";
import flatlineSkull from "./error-flatline.svg";
import { Error } from "~/layouts/error";
import { MemoryRouter } from "react-router-dom";

const meta = {
  title: "layout/Error", // Storybook category and component name
  component: Error, // Component being documented
  decorators: [
    (Story) => (
      <MemoryRouter>
        <Story />
      </MemoryRouter>
    ),
  ],
  tags: ["autodocs"], // Helps with autogenerated documentation
  parameters: {
    layout: "fullscreen", // Maximizes component preview space
  },
} satisfies Meta<typeof Error>;

export default meta;
type Story = StoryObj<typeof meta>;

// Story: 404 Not Found Error
export const NotFound: Story = {
  args: {
    error: {
      status: 404,
      data: "",
    },
  },
};

// Story: 405 Method Not Allowed Error
export const MethodNotAllowed: Story = {
  args: {
    error: {
      status: 405,
      data: "This method is not allowed.",
    },
  },
};

// Story: 500 Internal Server Error (Anomaly)
export const Anomaly: Story = {
  args: {
    error: {
      status: 500,
      statusText: "Internal Server Error",
    },
  },
};

// Story: Undefined Status Error (Flatlined)
export const Flatlined: Story = {
  args: {
    error: {
      status: undefined,
    },
  },
};
